apply plugin: 'com.android.application'

def timeStr = '20180130_1545'

android {
    signingConfigs {
        releaseConfig {
            keyAlias 'test_jenkins_release'
            keyPassword ALIAS_PASSWORD
            storeFile file('./../keystore/test_jenkins_release_key.jks')
            storePassword STORE_PASSWORD
        }
    }

    //渠道Flavors
    productFlavors {
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:    "wandoujia"]
        }
    }

    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId project.APPLICATION_ID
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            signingConfig signingConfigs.releaseConfig
        }
    }

    //修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def date = Calendar.getInstance();
                timeStr = date.get(Calendar.YEAR) + (((date.get(Calendar.MONTH) + 1) >= 10 ? date.get(Calendar.MONTH) + 1 : "0" + (date.get(Calendar.MONTH) + 1))) + (date.get(Calendar.DAY_OF_MONTH) >= 10 ? date.get(Calendar.DAY_OF_MONTH) : "0" + date.get(Calendar.DAY_OF_MONTH)) + "_" + (date.get(Calendar.HOUR_OF_DAY) >= 10 ? date.get(Calendar.HOUR_OF_DAY) : "0" + date.get(Calendar.HOUR_OF_DAY)) + (date.get(Calendar.MINUTE) >= 10 ? date.get(Calendar.MINUTE) : "0" + date.get(Calendar.MINUTE));
                def fileName = "Android_${defaultConfig.versionName}_${defaultConfig.versionCode}_${variant.productFlavors[0].name}" + "_" + timeStr + ".apk";
                // 是否为Jenkins打包，输出路径不同
                def outDirectory
                if ("true".equals(IS_JENKINS)) {
                    outDirectory = BUILD_PATH_JENKINS
                    outDirectory = outDirectory + "\\" + BUILD_TYPE + "\\" + timeStr
                } else {
                    outDirectory = outputFile.parent
                }
                output.outputFile = new File(outDirectory, fileName)
                // jenkins打包生成二维码
                if ("true".equals(IS_JENKINS)) {
                    if (tasks.findByPath('generateOR') == null) {
                        tasks.create(name: 'generateOR', type: Exec) {
                            println '---------------------generateQR------------------------'
                            // 执行jenkinsQR.py，生成二维码
                            def pycmd = "python jenkinsQR.py " + BUILD_TYPE + ' ' + timeStr + ' ' + BUILD_PATH_JENKINS + ' ' + fileName
                            pycmd.execute()
                            println pycmd
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}